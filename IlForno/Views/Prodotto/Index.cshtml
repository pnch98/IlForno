@model IEnumerable<IlForno.Models.Prodotto>

@{
    ViewData["Title"] = "Index";
}
<div class="d-flex justify-content-center align-items-center my-5">
    <div class="carousel-container">
        <div id="carouselExample" class="carousel slide">
            <div class="carousel-inner">
                <div class="carousel-item active">
                    <img src="https://www.finedininglovers.it/sites/g/files/xknfdk1106/files/fdl_content_import_it/margherita-50kalo.jpg" class="d-block w-100" style="object-fit: cover;" alt="...">
                </div>
                <div class="carousel-item">
                    <img src="https://www.silviocicchi.com/pizzachef/wp-content/uploads/2015/03/d2.jpg" class="d-block w-100" style="object-fit: cover;" alt="...">
                </div>
                <div class="carousel-item">
                    <img src="https://redketchup.it/wp-content/uploads/2023/11/pizza-ai-4-formaggi.webp" class="d-block w-100" style="object-fit: cover;" alt="...">
                </div>
            </div>
            <button class="carousel-control-prev" type="button" data-bs-target="#carouselExample" data-bs-slide="prev">
                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Previous</span>
            </button>
            <button class="carousel-control-next" type="button" data-bs-target="#carouselExample" data-bs-slide="next">
                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Next</span>
            </button>
        </div>
    </div>
</div>


<h1 class="display-4 text-center bgPomodoro py-3 mb-4" style="color: #FFF5ED;">Menù</h1>

@{
    if (User.IsInRole("Admin"))
    {
            <p>
                <a class="linkColor" asp-action="Create">Create New</a>
            </p>
    }
}



@foreach (var item in Model.Select((value, index) => new { Value = value, Index = index }))
{
    <div class="cardProduct position-relative d-flex navColor p-3 mb-3 @(item.Index % 2 != 0 ? "menuProductRight" : "menuProduct")">
        <div class="d-flex align-items-center justify-content-center overflow-hidden me-3" style="height: 250px; width: 350px;">
            <img src="@item.Value.Img" class="h-100" />
        </div>
        @{
            if (User.IsInRole("Admin"))
            {
                <div class="divBadge">
                    <a class="mt-3 me-2 badge badgeForno" asp-action="Edit" asp-route-id="@item.Value.Id"><i class="bi bi-pencil-fill"></i></a>
                    <a class="mt-3 me-3 badge badgeForno bg-danger" asp-action="Delete" asp-route-id="@item.Value.Id"><i class="bi bi-x-lg"></i></a>
                </div>
            }
        }
        <div class="d-flex flex-column justify-content-between">
            <div class="">
                <h3 class="card-text mb-1">@item.Value.Nome</h3>
                <p class="card-text font-monospace mb-4">@item.Value.Prezzo€</p>
                <p class="card-text"><strong>Ingredienti:</strong> @item.Value.Ingredienti</p>
            </div>
            <div class="my-2">
                <a id="@item.Value.Id" class="btnLightOutline btnAdd">Aggiungi</a>
                <input type="number" min="1" value="0" class="rounded me-1" style="width: 50px; background-color: #D2B48C" />
                <alert style="background-color: #D2B48C" class="d-none p-1 rounded" id="feedback"></alert>
            </div>
        </div>
    </div>
}


<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script>
    $(document).ready(function () {
        $(".btnAdd").click(function () {
            var productId = parseInt($(this).attr("id"));
            var quantity = parseInt($(this).siblings("input[type='number']").val());
            if (quantity > 0) {
                inviaCarrelloAlServer(productId, quantity);
                $(this).siblings("input[type='number']").val(0);
            }
        });

        function inviaCarrelloAlServer(productId, quantity) {
            // Costruisci l'URL con i parametri productId e quantity
            var url = '/Carrello/AggiornaCarrello?productId=' + productId + '&quantity=' + quantity;

            // Effettua la richiesta GET
            $.get(url)
                .done(function (response) {
                    console.log('Dati del carrello aggiornati con successo');
                    getCartData();
                })
                .fail(function (xhr, textStatus, errorThrown) {
                    console.error('Errore durante l\'aggiornamento del carrello:', errorThrown);
                    $("#feedback").removeClass("d-none");
                    $("#feedback").text("Errore");
                    setTimeout(() => {
                        $("#feedback").addClass("d-none");
                    }, 2000);
                });
        }

        $(window).scroll(function () {
            $('.cardProduct').each(function (index) {
                var windowTop = $(window).scrollTop();
                var windowHeight = $(window).height();
                var windowBottom = windowTop + windowHeight;
                var elemTop = $(this).offset().top;
                var elemBottom = elemTop + $(this).outerHeight();

                // Check if the element is fully within the viewport
                if (elemBottom >= windowTop && elemTop <= windowBottom) {
                    // Check if the index is odd and add showProductRight class
                    if (index % 2 === 1) { // Check if index is odd
                        $(this).addClass('showProductRight');
                    } else {
                        $(this).addClass('showProduct');
                    }
                } else if (elemTop >= windowBottom) {
                    // Remove showProduct only if below the end of the screen
                    $(this).removeClass('showProduct showProductRight');
                }
            });
        });
    });
</script>

